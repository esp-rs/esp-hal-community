name: CI

on:
  pull_request:
  push:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# Cancel any currently running workflows from the same PR, branch, or
# tag when a new workflow is triggered.
#
# https://stackoverflow.com/a/66336834
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  # --------------------------------------------------------------------------
  # Check
  check:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        device: [
            # RISC-V devices:
            { soc: "esp32c2", target: "riscv32imc-unknown-none-elf" },
            { soc: "esp32c3", target: "riscv32imc-unknown-none-elf" },
            { soc: "esp32c6", target: "riscv32imac-unknown-none-elf" },
            { soc: "esp32h2", target: "riscv32imac-unknown-none-elf" },
            # Xtensa devices:
            { soc: "esp32", target: "xtensa-esp32-none-elf" },
            { soc: "esp32s2", target: "xtensa-esp32s2-none-elf" },
            { soc: "esp32s3", target: "xtensa-esp32s3-none-elf" },
          ]

    steps:
      - uses: actions/checkout@v4

      # Install the Rust stable toolchain for RISC-V devices:
      - if: ${{ startsWith(matrix.device.target, 'riscv32') }}
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src
          target: ${{ matrix.device.target }}
      # Install the Rust toolchain for Xtensa devices:
      - if: ${{ startsWith(matrix.device.target, 'xtensa') }}
        uses: esp-rs/xtensa-toolchain@v1.6
        with:
          default: true
          ldproxy: false

      - uses: Swatinem/rust-cache@v2

      # NOTE: The ESP32-C2 does *not* have the RMT peripheral
      - if: ${{ matrix.device.soc != 'esp32c2' }}
        name: Check esp-hal-smartled
        uses: ./.github/actions/check-package
        with:
          package: esp-hal-smartled
          soc: ${{ matrix.device.soc }}
          target: ${{ matrix.device.target }}

      - name: Check esp-hal-buzzer
        uses: ./.github/actions/check-package
        with:
          package: esp-hal-buzzer
          soc: ${{ matrix.device.soc }}
          target: ${{ matrix.device.target }}

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-src, clippy
          target: riscv32imac-unknown-none-elf
      - run: cargo +stable clippy --features "esp32c6,esp-hal/unstable" --target=riscv32imac-unknown-none-elf -- -D warnings

  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  docs:
    name: Check Documentation Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
          targets: "riscv32imac-unknown-none-elf"
      - run: RUSTDOCFLAGS="--cfg docsrs -Z unstable-options" cargo +nightly doc --target=riscv32imac-unknown-none-elf --features "esp32c6,esp-hal/unstable"

  msrv-smartled:
    name: MSRV esp-hal-smartled
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88
        with:
          components: rust-src
          targets: "riscv32imac-unknown-none-elf"
      - run: cargo build -p esp-hal-smartled --features "esp32c6,esp-hal/unstable" --target=riscv32imac-unknown-none-elf

  msrv-buzzer:
    name: MSRV esp-hal-buzzer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88
        with:
          components: rust-src
          targets: "riscv32imac-unknown-none-elf"
      - run: cargo build -p esp-hal-buzzer --features "esp32c6,esp-hal/unstable" --target=riscv32imac-unknown-none-elf
